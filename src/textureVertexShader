precision mediump float;

attribute vec3 a_position;
attribute vec2 a_texCoord;
varying vec2 v_texCoord;
uniform vec3 u_positionOffset;
uniform vec2 u_textureOffset;
uniform float u_aspectRatio;
uniform float u_zoomFactor;

const float far = 100.0; //farthest distance visible to camera
const float near = 0.1; //closest distance visible to camera
float fov = radians(25.0*u_zoomFactor); //vertical y axis field of view of the camera
float f = 1.0 / tan(fov/2.0);

//projection and camera matrices
mat4 projection = mat4(f/u_aspectRatio, 0.0, 0.0, 0.0,
                       0.0, f, 0.0, 0.0,
                       0.0, 0.0, (near + far)/(near-far), 1.0,
                       0.0, 0.0, (near * far * 2.0)/(near-far), 1.0);

mat4 camera = mat4(1.0, 0.0, 0.0, 0.0,
                   0.0, 1.0, 0.0, 0.0,
                   0.0, 0.0, 1.0, 0.0,
                   0.0, 0.0, 1.0, 1.0);

void main() {
    gl_Position = projection * camera * vec4(
                      a_position.x + u_positionOffset.x,
                      a_position.y - u_positionOffset.y,
                      a_position.z + u_positionOffset.z, 1.0);
    v_texCoord = vec2(a_texCoord.x, 1.0 - a_texCoord.y) - u_textureOffset;
}
